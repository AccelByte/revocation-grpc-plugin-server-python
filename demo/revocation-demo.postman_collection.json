{
	"info": {
		"_postman_id": "b64393ab-e1b6-4a85-8785-8f4f2722a416",
		"name": "Revocation Demo",
		"description": "This `collection` requires an `environment` with the following variables.\n\n- `AB_BASE_URL`\n- `AB_NAMESPACE`\n- `AB_CLIENT_ID`\n- `AB_CLIENT_SECRET`\n- `EXTEND_APP_NAME` if you deployed your Extend App to AccelByte Gaming Services;\n    - or `GRPC_SERVER_URL` if you're using Ngrok to expose a locally hosted Extend App (ex: `9.tcp.ap.ngrok.io:99999`)\n\nYou will need following permissions for the IAM Client.  \nFor AGS Private Cloud customers:\n\n- `ADMIN:NAMESPACE:{namespace}:PLUGIN:REVOCATION [UPDATE,DELETE]`\n    \n- `ADMIN:NAMESPACE:{namespace}:REVOCATION [UPDATE]`\n    \n- `ADMIN:NAMESPACE:{namespace}:USER:\\*:ORDER [CREATE]`\n    \n- `ADMIN:NAMESPACE:{namespace}:USER:\\*:REVOCATION [UPDATE]`\n    \n- `ADMIN:NAMESPACE:{namespace}:STORE [CREATE,READ,UPDATE,DELETE]`\n    \n- `ADMIN:NAMESPACE:{namespace}:CATEGORY [CREATE]`\n    \n- `ADMIN:NAMESPACE:{namespace}:CURRENCY [CREATE,READ,DELETE]`\n    \n- `ADMIN:NAMESPACE:{namespace}:ITEM [CREATE,READ,DELETE]`\n    \n- `ADMIN:NAMESPACE:{namespace}:USER:{userId}:WALLET [UPDATE]`\n    \n- `NAMESPACE:{namespace}:WALLET [READ]`\n    \n\nFor AGS Shared Cloud customers:\n\n- Platform Store -> Revocation (Update, Delete)\n    \n- Platform Store -> Service Plugin Config (Read, Update, Delete)\n    \n- Platform Store -> Store (Create, Read, Update, Delete)\n- Platform Store -> Order (Create)\n    \n- Platform Store -> Category (Create)\n    \n- Platform Store -> Currency (Create, Read, Delete)\n- Platform Store -> Item (Create, Read, Delete)\n    \n- Platform Store -> Wallet (Read, Update)\n    \n\nMake sure you have deployed Extend Service Extension app. Get `EXTEND_APP_NAME` from extend app page in admin portal. For local deployment, use local url instead.\n\nPlease read [getting started with entitlement revocation customization](https://docs.accelbyte.io/gaming-services/services/extend/override/getting-started-with-entitlement-revocation-customization/) for more information.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17100405"
	},
	"item": [
		{
			"name": "10-client-login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Store client access token in collection variable\", function () {\r",
							"    var responseJson = pm.response.json();\r",
							"    \r",
							"    if (responseJson.access_token !== undefined) {\r",
							"        pm.collectionVariables.set('CLIENT_ACCESS_TOKEN', responseJson.access_token)\r",
							"    }\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{AB_CLIENT_SECRET}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{AB_CLIENT_ID}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{AB_BASE_URL}}/iam/v3/oauth/token",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"iam",
						"v3",
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "20-client-create-test-user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Store test user id, email, and password in collection variable\", function () {",
							"    var responseJson = pm.response.json();",
							"    ",
							"    if (responseJson.data[0].userId !== undefined) {",
							"        pm.collectionVariables.set('TEST_USER_ID', responseJson.data[0].userId)",
							"    }",
							"    if (responseJson.data[0].emailAddress !== undefined) {",
							"        pm.collectionVariables.set('TEST_USER_EMAIL', responseJson.data[0].emailAddress)",
							"    }",
							"    if (responseJson.data[0].password !== undefined) {",
							"        pm.collectionVariables.set('TEST_USER_PASSWORD', responseJson.data[0].password)",
							"    }",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"count\": 1,\n  \"userInfo\": {\n    \"country\": \"US\"\n  }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{AB_BASE_URL}}/iam/v4/admin/namespaces/{{AB_NAMESPACE}}/test_users",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"iam",
						"v4",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"test_users"
					]
				}
			},
			"response": []
		},
		{
			"name": "21-test-user-login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Store user access token in collection variable\", function () {",
							"    var responseJson = pm.response.json();",
							"    ",
							"    if (responseJson.access_token !== undefined) {",
							"        pm.collectionVariables.set('USER_ACCESS_TOKEN', responseJson.access_token)",
							"    }",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{AB_CLIENT_SECRET}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{AB_CLIENT_ID}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "username",
							"value": "{{TEST_USER_EMAIL}}",
							"type": "text"
						},
						{
							"key": "password",
							"value": "{{TEST_USER_PASSWORD}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{AB_BASE_URL}}/iam/v3/oauth/token",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"iam",
						"v3",
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "30-unregister-section-plugin",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{AB_BASE_URL}}/platform/admin/namespaces/{{AB_NAMESPACE}}/catalog/plugins/section",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"platform",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"catalog",
						"plugins",
						"section"
					]
				}
			},
			"response": []
		},
		{
			"name": "31-register-section-plugin",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let requestBody = {",
							"    customFunction: {",
							"        afterReadGameRecord: true,",
							"        beforeWritePlayerRecord: true",
							"    }",
							"};",
							"",
							"let extendAppName = pm.collectionVariables.get(\"EXTEND_APP_NAME\");",
							"let grpcServerUrl = pm.collectionVariables.get(\"GRPC_SERVER_URL\");",
							"",
							"if (!extendAppName) {",
							"    extendAppName = pm.globals.get(\"EXTEND_APP_NAME\");",
							"}",
							"",
							"if (!extendAppName) {",
							"    extendAppName = pm.environment.get(\"EXTEND_APP_NAME\");",
							"}",
							"",
							"if (!grpcServerUrl) {",
							"    grpcServerUrl = pm.globals.get(\"GRPC_SERVER_URL\");",
							"}",
							"",
							"if (!grpcServerUrl) {",
							"    grpcServerUrl = pm.environment.get(\"GRPC_SERVER_URL\");",
							"}",
							"",
							"if (extendAppName) {",
							"    requestBody.extendType = \"APP\";",
							"    requestBody.appConfig = {",
							"        appName: extendAppName",
							"    };",
							"} else if (grpcServerUrl) {",
							"    requestBody.extendType = \"CUSTOM\";",
							"    requestBody.customConfig = {",
							"        connectionType: \"INSECURE\",",
							"        grpcServerAddress: grpcServerUrl",
							"    };",
							"} else {",
							"    pm.test(\"'EXTEND_APP_NAME' or 'GRPC_SERVER_URL' was set\", function () {",
							"        pm.expect(requestBody.extendType).to.be.a(\"string\").and.to.have.length.above(0);",
							"    });",
							"    pm.execution.skipRequest();",
							"}",
							"",
							"pm.variables.set(\"requestBody\", JSON.stringify(requestBody));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{requestBody}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{AB_BASE_URL}}/platform/admin/namespaces/{{AB_NAMESPACE}}/revocation/plugins/revocation",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"platform",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"revocation",
						"plugins",
						"revocation"
					]
				}
			},
			"response": []
		},
		{
			"name": "40-create-currency",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 or 409\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 409]);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"currencyCode\": \"{{TEST_CURRENCY_CODE}}\",\n    \"currencySymbol\": \"$\",\n    \"currencyType\": \"VIRTUAL\",\n    \"decimals\": 0\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{AB_BASE_URL}}/platform/admin/namespaces/{{AB_NAMESPACE}}/currencies",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"platform",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"currencies"
					]
				}
			},
			"response": []
		},
		{
			"name": "41-create-store",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var uuid = require(\"uuid\");",
							"",
							"let storeUuid = uuid.v4();",
							"",
							"let requestBody = {",
							"    title: \"Revocation Plugin Demo Store\",",
							"    defaultLanguage: \"en\",",
							"    defaultRegion: \"US\",",
							"    description: `A store created for the Revocation Plugin Demo. (${storeUuid})`,",
							"    supportedLanguages: [\"en\"],",
							"    supportedRegions: [\"US\"]",
							"};",
							"",
							"pm.variables.set(\"requestBody\", JSON.stringify(requestBody));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Store store identifier in collection variable\", function () {",
							"    var responseJson = pm.response.json();",
							"    ",
							"    if (responseJson.storeId !== undefined) {",
							"        pm.collectionVariables.set('TEST_STORE_ID', responseJson.storeId)",
							"    }",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{requestBody}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{AB_BASE_URL}}/platform/admin/namespaces/{{AB_NAMESPACE}}/stores",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"platform",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"stores"
					]
				}
			},
			"response": []
		},
		{
			"name": "42-create-category",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"categoryPath\": \"{{TEST_CATEGORY_PATH}}\",\n    \"localizationDisplayNames\": {\n        \"en\": \"{{TEST_CATEGORY_PATH}}\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{AB_BASE_URL}}/platform/admin/namespaces/{{AB_NAMESPACE}}/categories?storeId={{TEST_STORE_ID}}",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"platform",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"categories"
					],
					"query": [
						{
							"key": "storeId",
							"value": "{{TEST_STORE_ID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "43-update-revocation-config",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"entitlement\": {\n        \"durable\": {\n            \"enabled\": false,\n            \"strategy\": \"CUSTOM\"\n        }\n    },\n    \"wallet\": {\n        \"enabled\": true,\n        \"strategy\": \"CUSTOM\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{AB_BASE_URL}}/platform/admin/namespaces/{{AB_NAMESPACE}}/revocation/config",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"platform",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"revocation",
						"config"
					]
				}
			},
			"response": []
		},
		{
			"name": "44-create-item",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var uuid = require(\"uuid\");",
							"",
							"let itemIndex = 1;",
							"let itemUuid = uuid.v4();",
							"let itemName = `Revocation Item ${itemIndex} ${itemUuid}`;",
							"let itemSku = `SKU_${itemUuid}_${itemIndex}`;",
							"",
							"let requestBody = {",
							"    name: itemName,",
							"    categoryPath: pm.collectionVariables.get(\"TEST_CATEGORY_PATH\"),",
							"    entitlementType: \"CONSUMABLE\",",
							"    itemType: \"COINS\",",
							"    localizations: {",
							"        \"en\": {",
							"            title: itemName",
							"        }",
							"    },",
							"    regionData: {",
							"        \"US\": [",
							"            {",
							"                currencyCode: pm.collectionVariables.get(\"TEST_CURRENCY_CODE\"),",
							"                currencyNamespace: pm.environment.get(\"AB_NAMESPACE\"),",
							"                currencyType: \"REAL\",",
							"                price: 0",
							"            }",
							"        ]",
							"    },",
							"    status: \"ACTIVE\",",
							"    listable: true,",
							"    seasonType: \"TIER\",",
							"    targetCurrencyCode: pm.collectionVariables.get(\"TEST_CURRENCY_CODE\"),",
							"    purchasable: true,",
							"    sku: itemSku,",
							"    useCount: 1",
							"};",
							"",
							"pm.variables.set(\"requestBody\", JSON.stringify(requestBody));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Store item identifier in collection variable\", function () {",
							"    var responseJson = pm.response.json();",
							"    ",
							"    if (responseJson.itemId !== undefined) {",
							"        pm.collectionVariables.set('TEST_ITEM_ID', responseJson.itemId)",
							"    }",
							"",
							"    if (responseJson.sku !== undefined) {",
							"        pm.collectionVariables.set('TEST_ITEM_SKU', responseJson.sku)",
							"    }",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{requestBody}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{AB_BASE_URL}}/platform/admin/namespaces/{{AB_NAMESPACE}}/items?storeId={{TEST_STORE_ID}}",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"platform",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"items"
					],
					"query": [
						{
							"key": "storeId",
							"value": "{{TEST_STORE_ID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "45-publish-store",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{AB_BASE_URL}}/platform/admin/namespaces/{{AB_NAMESPACE}}/stores/{{TEST_STORE_ID}}/catalogChanges/publishAll",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"platform",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"stores",
						"{{TEST_STORE_ID}}",
						"catalogChanges",
						"publishAll"
					]
				}
			},
			"response": []
		},
		{
			"name": "50-create-order",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Store order number in collection variable\", function () {",
							"    var responseJson = pm.response.json();",
							"    ",
							"    if (responseJson.orderNo !== undefined) {",
							"        pm.collectionVariables.set('TEST_ORDER_NO', responseJson.orderNo);",
							"    }",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"currencyCode\": \"{{TEST_CURRENCY_CODE}}\",\n    \"discountedPrice\": 0,\n    \"itemId\": \"{{TEST_ITEM_ID}}\",\n    \"quantity\": 1,\n    \"region\": \"US\",\n    \"price\": 0\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{AB_BASE_URL}}/platform/admin/namespaces/{{AB_NAMESPACE}}/users/{{TEST_USER_ID}}/orders",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"platform",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"users",
						"{{TEST_USER_ID}}",
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "51-revoke-order",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"revokeEntries\": [\n        {\n            \"item\": {\n                \"itemIdentity\": \"{{TEST_ITEM_ID}}\",\n                \"itemIdentityType\": \"ITEM_ID\"\n            },\n            \"quantity\": 1,\n            \"type\": \"ITEM\"\n        }\n    ],\n    \"source\": \"ORDER\",\n    \"transactionId\": \"{{TEST_ORDER_NO}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{AB_BASE_URL}}/platform/admin/namespaces/{{AB_NAMESPACE}}/users/{{TEST_USER_ID}}/revocation",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"platform",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"users",
						"{{TEST_USER_ID}}",
						"revocation"
					]
				}
			},
			"response": []
		},
		{
			"name": "80-delete-currency",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{AB_BASE_URL}}/platform/admin/namespaces/{{AB_NAMESPACE}}/currencies/{{TEST_CURRENCY_CODE}}",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"platform",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"currencies",
						"{{TEST_CURRENCY_CODE}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "81-delete-store",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set('TEST_STORE_ID', \"\");",
							"",
							"pm.collectionVariables.set('TEST_ITEM_ID', \"\");",
							"pm.collectionVariables.set('TEST_ITEM_SKU', \"\");",
							"",
							"pm.collectionVariables.set('TEST_ORDER_NO', \"\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{AB_BASE_URL}}/platform/admin/namespaces/{{AB_NAMESPACE}}/stores/{{TEST_STORE_ID}}",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"platform",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"stores",
						"{{TEST_STORE_ID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "82-unregister-section-plugin",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{AB_BASE_URL}}/platform/admin/namespaces/{{AB_NAMESPACE}}/revocation/plugins/revocation",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"platform",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"revocation",
						"plugins",
						"revocation"
					]
				}
			},
			"response": []
		},
		{
			"name": "90-client-delete-test-user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.collectionVariables.set('TEST_USER_ID', \"\");",
							"pm.collectionVariables.set('TEST_USER_EMAIL', \"\");",
							"pm.collectionVariables.set('TEST_USER_PASSWORD', \"\");"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{CLIENT_ACCESS_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{AB_BASE_URL}}/iam/v3/admin/namespaces/{{AB_NAMESPACE}}/users/{{TEST_USER_ID}}/information",
					"host": [
						"{{AB_BASE_URL}}"
					],
					"path": [
						"iam",
						"v3",
						"admin",
						"namespaces",
						"{{AB_NAMESPACE}}",
						"users",
						"{{TEST_USER_ID}}",
						"information"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "CLIENT_ACCESS_TOKEN",
			"value": "",
			"type": "string"
		},
		{
			"key": "USER_ACCESS_TOKEN",
			"value": "",
			"type": "string"
		},
		{
			"key": "TEST_USER_ID",
			"value": "",
			"type": "string"
		},
		{
			"key": "TEST_USER_EMAIL",
			"value": "",
			"type": "string"
		},
		{
			"key": "TEST_USER_PASSWORD",
			"value": "",
			"type": "string"
		},
		{
			"key": "TEST_CURRENCY_CODE",
			"value": "USDT",
			"type": "string"
		},
		{
			"key": "TEST_STORE_ID",
			"value": "",
			"type": "string"
		},
		{
			"key": "TEST_CATEGORY_PATH",
			"value": "/customRevocationDemo",
			"type": "string"
		},
		{
			"key": "TEST_ITEM_ID",
			"value": "",
			"type": "string"
		},
		{
			"key": "TEST_ITEM_SKU",
			"value": ""
		},
		{
			"key": "TEST_ORDER_NO",
			"value": "",
			"type": "string"
		}
	]
}